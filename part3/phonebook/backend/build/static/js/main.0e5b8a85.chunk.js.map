{"version":3,"sources":["components/Filter.js","components/Form.js","components/Contacts.js","components/Notification.js","services/contacts.js","App.js","index.js"],"names":["Filter","filterChange","onChange","Input","value","text","Form","nameChange","numChange","handleClick","nameValue","numValue","type","onClick","Contact","person","name","number","id","Contacts","persons","map","key","Notification","message","style","borderRadius","padding","background","marginBottom","error","border","color","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useEffect","contactService","currentContacts","setPersons","setFiltered","useState","newName","setNewName","newNum","setNewNum","filtered","notif","setNotif","setError","event","filter","toLowerCase","includes","target","preventDefault","existing","find","window","confirm","updatedContact","setTimeout","catch","newContact","concat","contact","newContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e5b8a85.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filterChange }) => {\n    return (<>\n        Filter By: <input onChange={filterChange} /> <br />\n    </>)\n}\n\nexport default Filter","import React from 'react'\n\nconst Input = ({ onChange, value, text }) =>\n    <>{text} <input onChange={onChange} value={value} /> <br /></>\n\nconst Form = ({ nameChange, numChange, handleClick, nameValue, numValue }) => {\n    return (<form>\n        <Input onChange={nameChange} value={nameValue} text={'Name: '} />\n        <Input onChange={numChange} value={numValue} text={'Number: '} />\n        <button type=\"submit\" onClick={handleClick}>Add</button>\n    </form>\n    )\n}\n\nexport default Form","import React from 'react'\n\nconst Contact = ({ person, handleClick }) =>\n    <>\n        {person.name} {person.number}\n        <button id={person.id} onClick={handleClick}>Delete</button> <br />\n    </>\n\nconst Contacts = ({ persons, handleClick }) => {\n    return (\n        <>\n            {persons.map(\n                person =>\n                    <Contact person={person} key={person.id} handleClick={handleClick} />\n            )}\n        </>\n    )\n}\n\nexport default Contacts","import React from 'react'\n\nconst Notification = ({ message, error }) => {\n    const style = {\n        borderRadius: '5px',\n        padding: '10px',\n        background: 'lightgrey',\n        marginBottom: '1rem'\n    }\n    if (error) {\n        style.border = 'solid 2px red'\n        style.color = 'red'\n    } else {\n        style.border = 'solid 2px green'\n        style.color = 'green'\n    }\n\n    if (message === null) {\n        return null\n    } else {\n        return (\n            <div style={style}>\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Contacts from './components/Contacts'\nimport Notification from './components/Notification'\nimport contactService from './services/contacts'\n\nconst App = () => {\n  const hook = () => {\n    contactService.getAll()\n      .then(currentContacts => {\n        setPersons(currentContacts)\n        setFiltered(currentContacts)\n      })\n  }\n  useEffect(hook, [])\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNum, setNewNum] = useState('')\n  const [filtered, setFiltered] = useState(persons)\n  const [notif, setNotif] = useState(null)\n  const [error, setError] = useState(false)\n\n  const nameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const numChange = (event) => {\n    setNewNum(event.target.value)\n  }\n\n  const filterChange = (event) => {\n    setFiltered(persons.filter(\n      person => person.name.toLowerCase().includes(event.target.value.toLowerCase())\n    ))\n  }\n\n  const addContact = (event) => {\n    event.preventDefault()\n    const existing = persons.find(person => person.name === newName)\n    if (existing != null) {\n      if (window.confirm(\n        `${newName} is already in the phonebook, replace their old number with the new one?`\n      )) {\n        contactService.update(\n          existing.id, { id: existing.id, name: existing.name, number: newNum }\n        )\n          .then(updatedContact => {\n            setPersons(persons.map(person => person.id != existing.id ? person : updatedContact))\n            setFiltered(persons.map(person => person.id != existing.id ? person : updatedContact))\n            setNotif(`Number of ${updatedContact.name} successfully changed`)\n            setError(false)\n            setTimeout(() => setNotif(null), 5000)\n          }).catch(() => {\n            setNotif(`${existing.name} has already been deleted from the server`)\n            setError(true)\n            setTimeout(() => setNotif(null), 5000)\n          })\n      }\n    } else {\n      contactService.create({ id: newName, name: newName, number: newNum })\n        .then(newContact => {\n          setPersons(persons.concat(newContact))\n          setFiltered(persons.concat(newContact))\n          setNewName('')\n          setNewNum('')\n          setNotif(`Added ${newContact.name}`)\n          setError(false)\n          setTimeout(() => setNotif(null), 5000)\n        })\n        .catch(error => {\n          setNewName('')\n          setNewNum('')\n          setNotif(\"Name must be at least 3 characters & number must be at least 8 digits\")\n          setError(true)\n          setTimeout(() => setNotif(null), 5000)\n        })\n    }\n  }\n\n  const deleteContact = (event) => {\n    const id = event.target.id\n    const contact = persons.find(person => person.id == id)\n    if (window.confirm(`Delete ${contact.name}?`)) {\n      contactService.remove(id)\n        .then(\n          () => {\n            const newContacts = persons.filter(person => person.id != id)\n            setPersons(newContacts)\n            setFiltered(newContacts)\n            setNotif(`${contact.name} successfully deleted`)\n            setError(false)\n            setTimeout(() => setNotif(null), 5000)\n          }\n        ).catch(\n          () => {\n            setNotif(`${contact.name} has already been deleted from the server`)\n            setError(true)\n            setTimeout(() => setNotif(null), 5000)\n          })\n    }\n  }\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification message={notif} error={error} />\n      <Filter\n        filterChange={filterChange}\n      />\n\n      <h2>New Contact</h2>\n      <Form\n        nameChange={nameChange} numChange={numChange} handleClick={addContact}\n        nameValue={newName} numValue={newNum}\n      />\n\n      <h2>Contacts</h2>\n      <Contacts persons={filtered} handleClick={deleteContact} />\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}